import pandas as pd
import numpy as np
import scipy
import pickle
import itertools
import time
from pegasos import Pegasos
from utilities import train_test_split_index,error_performance, get_folds, holdout

np.random.seed(42)

p = Pegasos()


df = pd.read_csv("extracted_labels.csv")
col_names = ['l_33','l_70', 'l_101', 'l_4']


with open('matrix.pickle', 'rb') as handle:
    X = pickle.load(handle)

#ls = [0.0001,0.005,0.001,0.05, 0.01, 0.05, 0.1, 0.5, 1, 5, 10, 50, 100, 500, 1000, 5000 ,10000]
#ls = [0.001,0.002, 0.003, 0.004,0.005, 0.005, 0.006, 0.007, 0.008, 0.009]
#ls = [0.0003,0.0004,0.0005, 0.0006, 0.0007, 0.0008, 0.0009,0.001 ]
# ls = [0.0005, 0.0006, 0.0007, 0.0008, 0.0009,0.001, 0.0015 ]

'''
vorrei avere un array con 3 dimensionini
l'array piu esterno ha 4 elementi uno per ogni colonna
ogni elemento di tale array Ã¨ una matrice che contiene l'errore dato un valore fisso di n_ex e lambda1
sulle righe si hanno il numero di esempi, sulle colonne si hanno i valori di lambda
'''

col_names = ['l_33','l_70', 'l_101', 'l_4']
indices =get_folds(20000,5)
testset_indices = indices.pop(0)
n_fold=4
#lbs = [0.0005, 0.0006, 0.0007, 0.0008, 0.0009,0.001]
lbs = [0.0005 ,0.0001,0.005,0.001,0.05, 0.01, 0.05, 0.1, 0.5, 1, 5, 10 ]
example_list = list(range(2000,8001,1000))
error_matrix_validation =[]
variance_matrix_validation = []
times_per_crossvalidation = []
for col in col_names:
    Y = np.array(df[col])
    col_validation = []
    col_validation_variance = []
    for n_ex in example_list:
        ex_validation_error = []
        ex_validation_variance = []
        for l in lbs:
            validation_error = []
            t1 = time.time()
            for i in range(n_fold):
                print('n_ex: ' + str(n_ex) + ' l: ' + str(l) + ' col: '+ col  + ' iteration: ' + str(i))
                #p = Pegasos()
                ls = holdout(indices,i)
                #initialize indices
                validation_indices = ls[0]
                train_indices = ls[1]
                # initialize data
                X_train = X[train_indices]
                Y_train = Y[train_indices]
                X_validation = X[validation_indices]
                Y_validation = Y[validation_indices]
                p.fit(X_train,Y_train, n_ex, l, 42)
                prediction_validation = p.predict_all(X_validation)
                validation_error.append(error_performance(Y_validation,prediction_validation))
            t2 = time.time()
            times_per_crossvalidation.append(t2-t1)
            ex_validation_error.append(np.mean(validation_error))
            ex_validation_variance.append(np.var(validation_error))
        col_validation.append(ex_validation_error)
        col_validation_variance.append(ex_validation_variance)
    error_matrix_validation.append(col_validation)
    variance_matrix_validation.append(col_validation_variance)

col_names = ['l_33','l_70', 'l_101', 'l_4']
col = 'l_4'
indices =get_folds(20000,5)
testset_indices = indices.pop(0)
n_fold=4
#lbs = [0.0005, 0.0006, 0.0007, 0.0008, 0.0009,0.001]
lbs = [0.0005 ,0.0001,0.005,0.001,0.05, 0.01, 0.05, 0.1, 0.5, 1, 5, 10 ]
example_list = list(range(2000,8001,1000))
error_matrix_validation =[]
#variance_matrix_validation = []
times_per_crossvalidation = []
Y = np.array(df[col])
#col_validation = []
#col_validation_variance = []
for n_ex in example_list:
    #ex_validation_error = []
    #ex_validation_variance = []
    for l in lbs:
        validation_error = []
        t1 = time.time()
        for i in range(n_fold):
            print('n_ex: ' + str(n_ex) + ' l: ' + str(l) + ' col: '+ col  + ' iteration: ' + str(i))
            #p = Pegasos()
            ls = holdout(indices,i)
            #initialize indices
            validation_indices = ls[0]
            train_indices = ls[1]
            # initialize data
            X_train = X[train_indices]
            Y_train = Y[train_indices]
            X_validation = X[validation_indices]
            Y_validation = Y[validation_indices]
            p.fit(X_train,Y_train, n_ex, l, 42)
            prediction_validation = p.predict_all(X_validation)
            validation_error.append(error_performance(Y_validation,prediction_validation))
        t2 = time.time()
        times_per_crossvalidation.append(t2-t1)
        #ex_validation_error.append(np.mean(validation_error))
        #ex_validation_variance.append(np.var(validation_error))
    #col_validation.append(ex_validation_error)
    #col_validation_variance.append(ex_validation_variance)
#error_matrix_validation.append(col_validation)
#variance_matrix_validation.append(col_validation_variance)


times_per_crossvalidation
times_per_crossvalidation = [18.724891662597656,
 15.251687288284302,
 22.937386989593506,
 19.56699228286743,
 23.467186450958252,
 23.372188329696655,
 23.37841010093689,
 23.410481452941895,
 23.38723373413086,
 23.33891725540161,
 23.36518430709839,
 23.34490394592285,
 27.974813222885132,
 23.705586433410645,
 35.58985352516174,
 30.18278217315674,
 36.20938038825989,
 36.084986209869385,
 36.18425011634827,
 36.164762020111084,
 36.12376403808594,
 36.183167934417725,
 36.09859895706177,
 36.14510536193848,
 37.949702739715576,
 31.975178480148315,
 49.034432888031006,
 42.17804193496704,
 49.97308921813965,
 49.79337430000305,
 49.96233320236206,
 49.86752676963806,
 49.87348246574402,
 49.91985845565796,
 49.9533851146698,
 56.66004824638367,
 48.507091999053955,
 40.63313412666321,
 62.43617486953735,
 53.28510761260986,
 63.57415008544922,
 63.47747087478638,
 63.430135011672974,
 63.48548746109009,
 63.45465898513794,
 63.5044162273407,
 63.453768491744995,
 63.446152210235596,
 59.459152698516846,
 49.56524109840393,
 76.50640177726746,
 65.48416376113892,
 81.21598505973816,
 79.6965479850769,
 79.74862146377563,
 79.84758520126343,
 78.26438808441162,
 78.35367774963379,
 79.96432304382324,
 77.4428391456604,
 70.3721706867218,
 58.58158349990845,
 90.37526965141296,
 77.24312925338745,
 91.8742847442627,
 91.78298115730286,
 91.88456463813782,
 91.80939388275146,
 91.9693992137909,
 91.89828038215637,
 95.53543090820312,
 96.3020715713501,
 81.743155002594,
 68.01355075836182,
 109.12249422073364,
 90.9025011062622,
 108.27988982200623,
 107.78321957588196,
 107.80075025558472,
 107.70159673690796,
 108.04945802688599,
 107.78453493118286,
 107.64113140106201,
 107.67022037506104,
 15.972305536270142,
 13.937240839004517,
 20.99181890487671,
 17.459412097930908,
 22.9867103099823,
 22.30204677581787,
 22.95669388771057,
 22.957817316055298,
 22.95737099647522,
 22.892956972122192,
 22.97559642791748,
 22.95511746406555,
 25.126150608062744,
 21.519115686416626,
 32.983675956726074,
 27.524720430374146,
 36.13729119300842,
 35.175761699676514,
 36.19151306152344,
 36.20526170730591,
 36.227328300476074,
 36.14453721046448,
 36.204623222351074,
 36.243550539016724,
 34.60317850112915,
 29.42979335784912,
 46.183537006378174,
 47.052804708480835,
 50.931015729904175,
 49.37491965293884,
 50.757805824279785,
 50.8569438457489,
 50.78960871696472,
 50.80671548843384,
 50.17225456237793,
 49.95192003250122,
 44.48577642440796,
 37.63737368583679,
 58.487879514694214,
 48.721460819244385,
 63.94362258911133,
 62.18443942070007,
 64.08711385726929,
 64.08224701881409,
 64.05037689208984,
 64.05915212631226,
 64.03483963012695,
 64.22263717651367,
 60.28194546699524,
 46.73017430305481,
 72.72805166244507,
 60.60105776786804,
 79.58746647834778,
 76.63433384895325,
 78.37815999984741,
 78.41223692893982,
 78.37023520469666,
 78.38672304153442,
 78.42200303077698,
 78.40279793739319,
 64.69843864440918,
 54.66929292678833,
 84.98148798942566,
 70.91074275970459,
 98.26028513908386,
 90.40468168258667,
 93.07669115066528,
 96.81161665916443,
 91.93921542167664,
 91.96117734909058,
 92.2900025844574,
 91.96732902526855,
 74.61991739273071,
 62.85253715515137,
 97.52039337158203,
 81.6041669845581,
 106.8504912853241,
 103.6835207939148,
 106.81243205070496,
 106.9126615524292,
 106.79988694190979,
 106.92804193496704,
 113.48848605155945,
 106.68248558044434,
 15.530276536941528,
 13.363941192626953,
 21.357951879501343,
 17.041040658950806,
 22.772709131240845,
 22.6290442943573,
 22.875725746154785,
 22.795825481414795,
 22.77394390106201,
 22.818976640701294,
 22.790800094604492,
 22.798121690750122,
 24.30411458015442,
 20.654441595077515,
 33.63111591339111,
 26.808431386947632,
 35.770493507385254,
 35.62584614753723,
 35.83837342262268,
 35.84827923774719,
 35.87084221839905,
 35.859261989593506,
 35.86805868148804,
 35.86243391036987,
 33.48650884628296,
 28.20417833328247,
 46.372716665267944,
 37.06325578689575,
 49.32789731025696,
 49.13070607185364,
 49.509910583496094,
 54.42534565925598,
 49.32153606414795,
 49.37768626213074,
 49.30241346359253,
 49.43978404998779,
 42.706669330596924,
 35.74704933166504,
 59.404186487197876,
 47.32710647583008,
 70.52044463157654,
 62.89126658439636,
 63.299516916275024,
 63.31422472000122,
 63.256598711013794,
 63.361793756484985,
 63.25239706039429,
 63.28140115737915,
 52.582061529159546,
 43.92665672302246,
 72.70968389511108,
 58.03547692298889,
 77.39008784294128,
 76.99091362953186,
 77.49913239479065,
 77.411372423172,
 77.49448823928833,
 84.25104999542236,
 77.43697690963745,
 77.57005596160889,
 62.23465418815613,
 52.116065979003906,
 86.30012965202332,
 69.05549001693726,
 91.97682118415833,
 91.42322206497192,
 91.90225172042847,
 91.90144085884094,
 91.88670039176941,
 91.85747981071472,
 91.96361231803894,
 92.1133120059967,
 72.40873861312866,
 61.77273082733154,
 100.21276831626892,
 80.07429361343384,
 107.31913542747498,
 107.62083029747009,
 106.50082039833069,
 112.9459764957428,
 106.41997385025024,
 106.48075366020203,
 106.76034426689148,
 106.55574464797974,
 16.05706763267517,
 13.393417358398438,
 20.897614002227783,
 16.384649515151978,
 23.668717861175537,
 22.702868700027466,
 23.897022485733032,
 23.589061975479126,
 23.58739161491394,
 23.574889421463013,
 23.580239295959473,
 23.638267040252686,
 23.30229139328003,
 20.44539785385132,
 32.93361163139343,
 25.56051778793335,
 37.1084930896759,
 35.89226794242859,
 37.47767519950867,
 37.15855026245117,
 37.14391374588013,
 37.10517191886902,
 37.1391921043396,
 37.517852783203125,
 32.1986289024353,
 27.906494617462158,
 45.509684801101685,
 34.65086364746094,
 50.1895432472229,
 48.59777069091797,
 51.790223836898804,
 51.247955322265625,
 51.19610118865967,
 51.16951656341553,
 51.35399532318115,
 51.24733567237854,
 41.365222692489624,
 35.02968192100525,
 57.287768840789795,
 44.67470026016235,
 64.35027503967285,
 62.32951641082764,
 64.31247448921204,
 64.32952237129211,
 64.2888286113739,
 64.31787896156311,
 64.31886625289917,
 64.2768030166626,
 49.72192668914795,
 42.311251401901245,
 72.15671944618225,
 55.37591361999512,
 80.05622029304504,
 77.84113550186157,
 83.49243450164795,
 79.97808837890625,
 79.19095492362976,
 79.09400463104248,
 79.16633439064026,
 79.03568911552429,
 59.08104968070984,
 50.13199830055237,
 84.34362149238586,
 65.24136424064636,
 94.69210529327393,
 90.98740196228027,
 93.78888630867004,
 93.79351711273193,
 93.47601222991943,
 93.22050642967224,
 93.1615777015686,
 93.2253246307373,
 68.40397810935974,
 57.9922833442688,
 96.48000645637512,
 75.13958239555359,
 108.14039206504822,
 104.75500893592834,
 108.16159963607788,
 108.11526989936829,
 108.06482720375061,
 108.02682137489319,
 108.10047578811646,
 108.04982352256775]


error_matrix_validation
error_matrix_validation = [[[0.1149375,
   0.1275,
   0.170375,
   0.11756250000000004,
   0.20431249999999998,
   0.19568750000000001,
   0.20431249999999998,
   0.204875,
   0.204875,
   0.204875,
   0.204875,
   0.204875],
  [0.1063125,
   0.11499999999999999,
   0.1719375,
   0.11274999999999999,
   0.20425000000000001,
   0.196375,
   0.20425000000000001,
   0.2045625,
   0.2045625,
   0.2045625,
   0.2045625,
   0.2045625],
  [0.10175000000000001,
   0.10643750000000002,
   0.1714375,
   0.10743749999999999,
   0.202625,
   0.19631249999999997,
   0.202625,
   0.2028125,
   0.2028125,
   0.2028125,
   0.2028125,
   0.2028125],
  [0.09893750000000001,
   0.10093749999999999,
   0.16975,
   0.10468750000000002,
   0.199875,
   0.19324999999999998,
   0.199875,
   0.199875,
   0.199875,
   0.199875,
   0.199875,
   0.199875],
  [0.09687499999999999,
   0.0988125,
   0.1695,
   0.10368749999999999,
   0.1974375,
   0.192,
   0.1974375,
   0.1974375,
   0.1974375,
   0.1974375,
   0.1974375,
   0.1974375],
  [0.0958125,
   0.09693749999999998,
   0.16962500000000003,
   0.10249999999999998,
   0.1965625,
   0.191125,
   0.1965625,
   0.196625,
   0.196625,
   0.196625,
   0.196625,
   0.196625],
  [0.09493749999999998,
   0.0948125,
   0.169625,
   0.102375,
   0.195375,
   0.19068749999999998,
   0.195375,
   0.195625,
   0.195625,
   0.195625,
   0.195625,
   0.195625]],
 [[0.0653125,
   0.07224999999999998,
   0.1391875,
   0.0688125,
   0.22768750000000001,
   0.20031249999999998,
   0.22768750000000001,
   0.22781250000000003,
   0.22781250000000003,
   0.22781250000000003,
   0.22781250000000003,
   0.22781250000000003],
  [0.06006249999999999,
   0.064,
   0.1355,
   0.06443750000000001,
   0.2271875,
   0.198375,
   0.2271875,
   0.2271875,
   0.2271875,
   0.2271875,
   0.2271875,
   0.2271875],
  [0.0584375,
   0.05875,
   0.13362499999999997,
   0.06312499999999999,
   0.22518749999999998,
   0.19625,
   0.22518749999999998,
   0.22518749999999998,
   0.22518749999999998,
   0.22518749999999998,
   0.22518749999999998,
   0.22518749999999998],
  [0.05706249999999999,
   0.056375000000000036,
   0.13174999999999998,
   0.06225,
   0.22437500000000002,
   0.1948125,
   0.22437500000000002,
   0.2244375,
   0.2244375,
   0.2244375,
   0.2244375,
   0.2244375],
  [0.055875000000000036,
   0.05449999999999999,
   0.13062499999999996,
   0.06181249999999999,
   0.2234375,
   0.194,
   0.2234375,
   0.2235,
   0.2235,
   0.2235,
   0.2235,
   0.2235],
  [0.05500000000000002,
   0.053562499999999985,
   0.13,
   0.06193749999999998,
   0.22325,
   0.1930625,
   0.22325,
   0.22331250000000002,
   0.22331250000000002,
   0.22331250000000002,
   0.22331250000000002,
   0.22331250000000002],
  [0.05443750000000003,
   0.0516875,
   0.12893749999999998,
   0.06068749999999998,
   0.22250000000000003,
   0.19199999999999998,
   0.22250000000000003,
   0.22250000000000003,
   0.22250000000000003,
   0.22250000000000003,
   0.22250000000000003,
   0.22250000000000003]],
 [[0.06875,
   0.0775625,
   0.17006249999999998,
   0.0735625,
   0.22456250000000003,
   0.2176875,
   0.22456250000000003,
   0.22412500000000002,
   0.22412500000000002,
   0.22412500000000002,
   0.22412500000000002,
   0.22412500000000002],
  [0.06318750000000001,
   0.0685625,
   0.1631875,
   0.06949999999999998,
   0.22168749999999998,
   0.21381250000000002,
   0.22168749999999998,
   0.22124999999999997,
   0.22124999999999997,
   0.22124999999999997,
   0.22124999999999997,
   0.22124999999999997],
  [0.06006249999999999,
   0.06437499999999999,
   0.1599375,
   0.06687500000000002,
   0.221,
   0.21287500000000004,
   0.221,
   0.2204375,
   0.2204375,
   0.2204375,
   0.2204375,
   0.2204375],
  [0.05806249999999999,
   0.060124999999999984,
   0.15837500000000002,
   0.06574999999999998,
   0.219375,
   0.213125,
   0.219375,
   0.219125,
   0.219125,
   0.219125,
   0.219125,
   0.219125],
  [0.05687500000000001,
   0.0574375,
   0.15843749999999998,
   0.06418750000000001,
   0.219,
   0.21318750000000003,
   0.219,
   0.2186875,
   0.2186875,
   0.2186875,
   0.2186875,
   0.2186875],
  [0.056187499999999974,
   0.05587500000000001,
   0.1575625,
   0.0630625,
   0.21831250000000002,
   0.2128125,
   0.21831250000000002,
   0.218125,
   0.218125,
   0.218125,
   0.218125,
   0.218125],
  [0.055812500000000015,
   0.05437500000000001,
   0.15675,
   0.06275,
   0.2176875,
   0.2125625,
   0.2176875,
   0.217375,
   0.217375,
   0.217375,
   0.217375,
   0.217375]],
 [[0.05781249999999999,
   0.05712500000000001,
   0.09162500000000001,
   0.0625,
   0.13318750000000001,
   0.11906249999999999,
   0.13318750000000001,
   0.1333125,
   0.1333125,
   0.1333125,
   0.1333125,
   0.1333125],
  [0.0556875,
   0.05224999999999999,
   0.0914375,
   0.06131249999999999,
   0.1334375,
   0.11875000000000002,
   0.1334375,
   0.1335,
   0.1335,
   0.1335,
   0.1335,
   0.1335],
  [0.054312500000000014,
   0.050437499999999996,
   0.0905,
   0.060624999999999984,
   0.1321875,
   0.11743750000000003,
   0.1321875,
   0.13225,
   0.13225,
   0.13225,
   0.13225,
   0.13225],
  [0.053125000000000006,
   0.04825000000000004,
   0.08956249999999999,
   0.059937500000000005,
   0.13125,
   0.11631249999999999,
   0.13125,
   0.13137500000000002,
   0.13137500000000002,
   0.13137500000000002,
   0.13137500000000002,
   0.13137500000000002],
  [0.0524375,
   0.04731249999999998,
   0.08893750000000003,
   0.05931249999999999,
   0.1300625,
   0.11556250000000001,
   0.1300625,
   0.13018749999999998,
   0.13018749999999998,
   0.13018749999999998,
   0.13018749999999998,
   0.13018749999999998],
  [0.0519375,
   0.046375,
   0.08856250000000004,
   0.05912499999999998,
   0.12981249999999997,
   0.115375,
   0.12981249999999997,
   0.129875,
   0.129875,
   0.129875,
   0.129875,
   0.129875],
  [0.05124999999999999,
   0.045625,
   0.08850000000000002,
   0.059,
   0.1295,
   0.11474999999999999,
   0.1295,
   0.1295,
   0.1295,
   0.1295,
   0.1295,
   0.1295]]]


variance_matrix_validation
variance_matrix_validation = [[[3.4730468750000026e-05,
   4.109374999999975e-05,
   2.829687500000029e-05,
   2.1136718749999966e-05,
   3.5855468750000216e-05,
   4.426171874999984e-05,
   3.5855468750000216e-05,
   2.520312499999981e-05,
   2.520312499999981e-05,
   2.520312499999981e-05,
   2.520312499999981e-05,
   2.520312499999981e-05],
  [2.335546874999991e-05,
   1.22812500000001e-05,
   1.7449218750000117e-05,
   1.528124999999995e-05,
   3.928124999999988e-05,
   7.145312499999964e-05,
   3.928124999999988e-05,
   3.348046874999999e-05,
   3.348046874999999e-05,
   3.348046874999999e-05,
   3.348046874999999e-05,
   3.348046874999999e-05],
  [1.1468750000000235e-05,
   6.992187499999952e-07,
   1.7324218750000097e-05,
   1.1167968749999795e-05,
   5.4703125000000295e-05,
   6.223046874999994e-05,
   5.4703125000000295e-05,
   5.073046875000014e-05,
   5.073046875000014e-05,
   5.073046875000014e-05,
   5.073046875000014e-05,
   5.073046875000014e-05],
  [5.855468749999991e-06,
   2.0742187499999873e-06,
   1.740625000000012e-05,
   9.01171875000007e-06,
   5.164062500000026e-05,
   5.5718749999999704e-05,
   5.164062500000026e-05,
   5.164062500000026e-05,
   5.164062500000026e-05,
   5.164062500000026e-05,
   5.164062500000026e-05,
   5.164062500000026e-05],
  [1.0640624999999822e-05,
   5.4492187500000075e-06,
   1.5468750000000047e-05,
   1.366796875000008e-05,
   4.710546875000037e-05,
   4.4031249999999644e-05,
   4.710546875000037e-05,
   4.710546875000037e-05,
   4.710546875000037e-05,
   4.710546875000037e-05,
   4.710546875000037e-05,
   4.710546875000037e-05],
  [1.1167968750000163e-05,
   8.761718749999986e-06,
   1.3390624999999953e-05,
   1.3531249999999932e-05,
   4.3917968750000195e-05,
   3.251562499999992e-05,
   4.3917968750000195e-05,
   4.2796875000000314e-05,
   4.2796875000000314e-05,
   4.2796875000000314e-05,
   4.2796875000000314e-05,
   4.2796875000000314e-05],
  [1.601171875000008e-05,
   1.298046875000007e-05,
   1.0828125000000217e-05,
   2.0921874999999846e-05,
   3.8515625000000084e-05,
   3.2292968749999675e-05,
   3.8515625000000084e-05,
   3.439062500000007e-05,
   3.439062500000007e-05,
   3.439062500000007e-05,
   3.439062500000007e-05,
   3.439062500000007e-05]],
 [[1.5136718750000029e-05,
   8.468750000000202e-06,
   8.760546875000024e-05,
   2.0449218749999838e-05,
   0.00018848046874999944,
   0.00020985546874999986,
   0.00018848046874999944,
   0.00019391796875000005,
   0.00019391796875000005,
   0.00019391796875000005,
   0.00019391796875000005,
   0.00019391796875000005],
  [1.2824218750000013e-05,
   1.1062499999999923e-05,
   7.296875000000048e-05,
   2.0667968750000124e-05,
   0.0001681054687500001,
   0.00014945312500000023,
   0.0001681054687500001,
   0.0001681054687500001,
   0.0001681054687500001,
   0.0001681054687500001,
   0.0001681054687500001,
   0.0001681054687500001],
  [1.1824218749999963e-05,
   3.218749999999943e-06,
   5.079687499999991e-05,
   1.4765624999999732e-05,
   0.00015226171875000043,
   9.24687499999994e-05,
   0.00015226171875000043,
   0.00015226171875000043,
   0.00015226171875000043,
   0.00015226171875000043,
   0.00015226171875000043,
   0.00015226171875000043],
  [1.035546875e-05,
   5.671875000000062e-06,
   3.240625000000004e-05,
   1.6718749999999966e-05,
   0.00013001562499999995,
   7.638671874999955e-05,
   0.00013001562499999995,
   0.00013216796874999972,
   0.00013216796874999972,
   0.00013216796874999972,
   0.00013216796874999972,
   0.00013216796874999972],
  [8.890624999999935e-06,
   4.156249999999932e-06,
   2.5640625000000107e-05,
   1.157421875000014e-05,
   0.0001135117187500001,
   7.790625000000016e-05,
   0.0001135117187500001,
   0.00011553124999999987,
   0.00011553124999999987,
   0.00011553124999999987,
   0.00011553124999999987,
   0.00011553124999999987],
  [8.656249999999953e-06,
   6.792968749999919e-06,
   1.6968750000000077e-05,
   1.213671874999991e-05,
   0.00010128124999999982,
   6.985546874999982e-05,
   0.00010128124999999982,
   0.00010316796875000045,
   0.00010316796875000045,
   0.00010316796875000045,
   0.00010316796875000045,
   0.00010316796875000045],
  [6.636718750000124e-06,
   7.042968749999965e-06,
   1.4105468749999971e-05,
   1.2136718749999949e-05,
   9.350000000000016e-05,
   5.4281249999999744e-05,
   9.350000000000016e-05,
   9.350000000000016e-05,
   9.350000000000016e-05,
   9.350000000000016e-05,
   9.350000000000016e-05,
   9.350000000000016e-05]],
 [[2.4874999999999795e-05,
   3.1324218750000177e-05,
   0.00023457421875000014,
   1.844921875000003e-05,
   5.732421875e-05,
   7.488671874999974e-05,
   5.732421875e-05,
   5.926562500000009e-05,
   5.926562500000009e-05,
   5.926562500000009e-05,
   5.926562500000009e-05,
   5.926562500000009e-05],
  [1.4730468749999666e-05,
   3.2355468749999785e-05,
   0.00021073046874999955,
   4.124999999999897e-06,
   7.819921874999974e-05,
   0.00011204296875000038,
   7.819921874999974e-05,
   8.309374999999982e-05,
   8.309374999999982e-05,
   8.309374999999982e-05,
   8.309374999999982e-05,
   8.309374999999982e-05],
  [1.2230468750000075e-05,
   2.0171874999999686e-05,
   0.00019382421875000004,
   4.76562499999995e-06,
   0.00010684374999999938,
   0.00012139062500000008,
   0.00010684374999999938,
   0.00011398046874999925,
   0.00011398046874999925,
   0.00011398046874999925,
   0.00011398046874999925,
   0.00011398046874999925],
  [1.0167968749999849e-05,
   1.517187499999992e-05,
   0.00016470312500000038,
   3.9062500000000695e-06,
   0.00012014062499999978,
   0.00011192187500000007,
   0.00012014062499999978,
   0.00012339062499999975,
   0.00012339062499999975,
   0.00012339062499999975,
   0.00012339062499999975,
   0.00012339062499999975],
  [6.1718750000000145e-06,
   1.2136718749999825e-05,
   0.00014263671875000035,
   4.167968749999883e-06,
   0.00010837500000000072,
   0.00010419921875000013,
   0.00010837500000000072,
   0.00011179296875000065,
   0.00011179296875000065,
   0.00011179296875000065,
   0.00011179296875000065,
   0.00011179296875000065],
  [2.3242187499999947e-06,
   1.2140624999999907e-05,
   0.00012469921875000043,
   4.355468750000102e-06,
   9.541796874999964e-05,
   0.00010204296875000011,
   9.541796874999964e-05,
   9.73281249999997e-05,
   9.73281249999997e-05,
   9.73281249999997e-05,
   9.73281249999997e-05,
   9.73281249999997e-05],
  [1.2304687499999996e-06,
   8.296875000000088e-06,
   0.00012987499999999943,
   3.0312499999999013e-06,
   9.310546874999964e-05,
   9.76679687499999e-05,
   9.310546874999964e-05,
   9.601562499999956e-05,
   9.601562499999956e-05,
   9.601562499999956e-05,
   9.601562499999956e-05,
   9.601562499999956e-05]],
 [[1.2917968749999941e-05,
   4.953124999999971e-06,
   6.828124999999967e-06,
   1.0343749999999914e-05,
   2.8417968749999794e-05,
   2.9636718749999797e-05,
   2.8417968749999794e-05,
   2.9917968749999624e-05,
   2.9917968749999624e-05,
   2.9917968749999624e-05,
   2.9917968749999624e-05,
   2.9917968749999624e-05],
  [1.688671875000006e-05,
   1.718749999999996e-06,
   7.699218750000007e-06,
   1.2386718749999884e-05,
   2.7699218749999702e-05,
   3.340625000000007e-05,
   2.7699218749999702e-05,
   2.834374999999992e-05,
   2.834374999999992e-05,
   2.834374999999992e-05,
   2.834374999999992e-05,
   2.834374999999992e-05],
  [1.0417968750000024e-05,
   6.679687499999777e-07,
   4.9062500000000295e-06,
   1.4515624999999785e-05,
   3.201171874999991e-05,
   3.329296875000016e-05,
   3.201171874999991e-05,
   3.2656249999999835e-05,
   3.2656249999999835e-05,
   3.2656249999999835e-05,
   3.2656249999999835e-05,
   3.2656249999999835e-05],
  [1.0765624999999952e-05,
   1.8750000000000035e-07,
   4.730468750000058e-06,
   1.4761718750000072e-05,
   2.3125000000000152e-05,
   2.2824218750000075e-05,
   2.3125000000000152e-05,
   2.4171875000000267e-05,
   2.4171875000000267e-05,
   2.4171875000000267e-05,
   2.4171875000000267e-05,
   2.4171875000000267e-05],
  [9.79296875000009e-06,
   2.6171874999998746e-07,
   5.074218750000027e-06,
   1.304296874999992e-05,
   1.6480468750000073e-05,
   2.5136718749999823e-05,
   1.6480468750000073e-05,
   1.719921875e-05,
   1.719921875e-05,
   1.719921875e-05,
   1.719921875e-05,
   1.719921875e-05],
  [7.730468750000066e-06,
   5.781250000000391e-07,
   5.042968749999969e-06,
   1.3171874999999917e-05,
   1.7792968749999736e-05,
   2.2015625000000062e-05,
   1.7792968749999736e-05,
   1.8140624999999856e-05,
   1.8140624999999856e-05,
   1.8140624999999856e-05,
   1.8140624999999856e-05,
   1.8140624999999856e-05],
  [9.968750000000095e-06,
   1.7968750000000416e-06,
   5.4687500000001134e-06,
   1.178125000000007e-05,
   1.9281250000000194e-05,
   2.2343749999999964e-05,
   1.9281250000000194e-05,
   1.9281250000000194e-05,
   1.9281250000000194e-05,
   1.9281250000000194e-05,
   1.9281250000000194e-05,
   1.9281250000000194e-05]]]

best_parameter = []
for i in range(4):
    ls = np.array(error_matrix_validation[i])
    ls  = ls.transpose()
    '''
    fisso un T, calcolo la media del validation error al variare di lambda
    Scelgo il lambda che ha l'errore medio piu basso
    '''
    ls_mean = np.mean(ls,axis=1)
    best_parameter.append(lbs[np.argmin(ls_mean)])
best_parameter
best_parameter = [0.0005, 0.0005, 0.0005, 0.0001]

from pegasos import Pegasos
from perceptron import Perceptron
import time
pegasos = Pegasos()
perceptron = Perceptron()
train_indices = list(itertools.chain(*indices))
X_train = X[train_indices]
X_test = X[testset_indices]

all_time_pegasos = []
all_time_perceptron =[]
all_test_error_pegasos =[]
all_test_error_perceptron= []
all_train_error_pegasos =[]
all_train_error_perceptron= []
for col,pos in zip(col_names, [0,1,2,3]):
    time_pegasos =[]
    time_perceptron = []
    test_error_pegasos =[]
    test_error_perceptron = []
    train_error_pegasos =[]
    train_error_perceptron = []
    Y = np.array(df[col])
    Y_train = Y[train_indices]
    Y_test = Y[testset_indices]
    l = best_parameter[pos]
    for T in range(2000,20001,1000):
        print('col: ' + col + ' T: ' + str(T))
        t1 = time.time()
        pegasos.fit(X_train,Y_train,T,l)
        t2 = time.time()
        time_pegasos.append(t2-t1)
        prediction = pegasos.predict_all(X_test)
        test_error_pegasos.append(error_performance(Y_test, prediction))
        prediction = pegasos.predict_all(X_train)
        train_error_pegasos.append(error_performance(Y_train, prediction))
        t1 = time.time()
        perceptron.fit(X_train, Y_train,T)
        t2 = time.time()
        time_perceptron.append(t2-t1)
        prediction = perceptron.predict_all(X_test)
        test_error_perceptron.append(error_performance(Y_test, prediction))
        prediction = perceptron.predict_all(X_train)
        train_error_perceptron.append(error_performance(Y_train, prediction))
    all_time_pegasos.append(time_pegasos)
    all_time_perceptron.append(time_perceptron)
    all_test_error_pegasos.append(test_error_pegasos)
    all_test_error_perceptron.append(test_error_perceptron)
    all_train_error_pegasos.append(train_error_pegasos)
    all_train_error_perceptron.append(train_error_perceptron)

all_time_perceptron
all_time_perceptron = [[2.020409107208252,
  3.0605947971343994,
  4.022212982177734,
  4.916302442550659,
  5.944822788238525,
  6.96006965637207,
  8.010382413864136,
  9.054057359695435,
  10.086014747619629,
  11.13527798652649,
  12.216388940811157,
  13.234696388244629,
  14.116814136505127,
  15.146986722946167,
  16.248009204864502,
  17.290308952331543,
  18.32886266708374,
  19.371190071105957,
  21.138265132904053],
 [1.7462210655212402,
  2.6648378372192383,
  3.538577079772949,
  4.29682183265686,
  5.196905612945557,
  6.128369569778442,
  7.053443193435669,
  8.002857446670532,
  8.923657417297363,
  9.860152006149292,
  10.792729139328003,
  11.721028566360474,
  12.769391298294067,
  13.640942096710205,
  14.562438488006592,
  15.527373552322388,
  16.534845113754272,
  17.41893696784973,
  18.407727003097534],
 [1.67854642868042,
  2.5322766304016113,
  3.381833791732788,
  4.241896390914917,
  5.135386943817139,
  6.008702993392944,
  6.901072263717651,
  7.817243814468384,
  8.722614765167236,
  9.640552759170532,
  10.555489301681519,
  11.486235618591309,
  14.947944402694702,
  13.495681524276733,
  14.410295963287354,
  15.37011170387268,
  16.296477556228638,
  17.250782251358032,
  18.1496479511261],
 [1.646512746810913,
  2.484741687774658,
  3.3182125091552734,
  4.15234375,
  5.005372524261475,
  5.861838102340698,
  6.7129294872283936,
  7.566483736038208,
  8.437087774276733,
  9.29740595817566,
  10.194845914840698,
  11.026934385299683,
  11.922804117202759,
  12.783520460128784,
  13.655801057815552,
  14.565887212753296,
  15.4755380153656,
  16.347203254699707,
  17.230772972106934]]


all_time_pegasos
all_time_pegasos =[[5.089463472366333,
  7.633652925491333,
  10.69371771812439,
  12.747775316238403,
  15.394904851913452,
  18.213563680648804,
  21.195284128189087,
  24.06922149658203,
  27.069594621658325,
  30.27522921562195,
  33.25559425354004,
  36.249380350112915,
  39.115599632263184,
  41.90031981468201,
  44.87741804122925,
  48.02509546279907,
  51.11462640762329,
  54.27454352378845,
  57.330010652542114],
 [5.344080924987793,
  6.467935562133789,
  8.819884300231934,
  12.091705560684204,
  13.47356367111206,
  15.971076965332031,
  18.64346718788147,
  21.310216188430786,
  23.919817686080933,
  26.54821515083313,
  29.254323959350586,
  31.9625403881073,
  34.71234369277954,
  37.72683382034302,
  40.23890566825867,
  43.28705954551697,
  45.81242489814758,
  48.67663240432739,
  51.51949334144592],
 [3.8734264373779297,
  6.082546234130859,
  8.382739305496216,
  10.742228507995605,
  13.207950830459595,
  15.688578844070435,
  18.216150760650635,
  20.793578147888184,
  23.39482021331787,
  26.212900400161743,
  28.790070056915283,
  31.396183013916016,
  34.061620473861694,
  37.960665702819824,
  40.03892683982849,
  42.81899571418762,
  45.562132596969604,
  48.39078688621521,
  51.18128490447998],
 [3.259136199951172,
  4.990907907485962,
  6.778880834579468,
  8.669870853424072,
  10.552390813827515,
  12.508034706115723,
  14.460156679153442,
  16.53293800354004,
  18.522508144378662,
  20.57170605659485,
  22.872971296310425,
  24.80403208732605,
  26.91730260848999,
  29.188069343566895,
  31.297463178634644,
  33.64175796508789,
  35.68733024597168,
  38.02887439727783,
  40.2249870300293]]



all_test_error_pegasos
all_test_error_pegasos =[[0.11950000000000005,
  0.10775000000000001,
  0.09999999999999998,
  0.09575,
  0.09450000000000003,
  0.09350000000000003,
  0.09050000000000002,
  0.09075,
  0.08975,
  0.08875,
  0.08825000000000005,
  0.08725000000000005,
  0.08850000000000002,
  0.08775,
  0.08650000000000002,
  0.08599999999999997,
  0.08650000000000002,
  0.08499999999999996,
  0.08399999999999996],
 [0.06925000000000003,
  0.06474999999999997,
  0.061000000000000054,
  0.058499999999999996,
  0.05625000000000002,
  0.05525000000000002,
  0.05449999999999999,
  0.05400000000000005,
  0.052749999999999964,
  0.052749999999999964,
  0.05349999999999999,
  0.053749999999999964,
  0.05300000000000005,
  0.05325000000000002,
  0.05325000000000002,
  0.053749999999999964,
  0.053749999999999964,
  0.053749999999999964,
  0.05400000000000005],
 [0.0675,
  0.0645,
  0.06000000000000005,
  0.057499999999999996,
  0.05400000000000005,
  0.05349999999999999,
  0.052000000000000046,
  0.05149999999999999,
  0.051000000000000045,
  0.05149999999999999,
  0.052000000000000046,
  0.05225000000000002,
  0.052000000000000046,
  0.052000000000000046,
  0.052000000000000046,
  0.05174999999999996,
  0.052000000000000046,
  0.052000000000000046,
  0.05174999999999996],
 [0.053749999999999964,
  0.046499999999999986,
  0.044499999999999984,
  0.04249999999999998,
  0.04049999999999998,
  0.039000000000000035,
  0.03774999999999995,
  0.038000000000000034,
  0.038250000000000006,
  0.037250000000000005,
  0.03700000000000003,
  0.03700000000000003,
  0.036250000000000004,
  0.03649999999999998,
  0.03674999999999995,
  0.03674999999999995,
  0.03674999999999995,
  0.03649999999999998,
  0.036250000000000004]]



all_train_error_pegasos
all_train_error_pegasos = [[0.1015625,
  0.09287500000000004,
  0.08768750000000003,
  0.08437499999999998,
  0.08206250000000004,
  0.08074999999999999,
  0.07999999999999996,
  0.07943750000000005,
  0.0789375,
  0.07831250000000001,
  0.07743750000000005,
  0.07699999999999996,
  0.07637499999999997,
  0.07593749999999999,
  0.07550000000000001,
  0.07562500000000005,
  0.07493749999999999,
  0.07450000000000001,
  0.07425000000000004],
 [0.05974999999999997,
  0.05406250000000001,
  0.05193749999999997,
  0.04949999999999999,
  0.04756249999999995,
  0.04612499999999997,
  0.04543750000000002,
  0.044749999999999956,
  0.044187500000000046,
  0.044062500000000004,
  0.043625000000000025,
  0.04312499999999997,
  0.04268749999999999,
  0.04225000000000001,
  0.042187500000000044,
  0.04200000000000004,
  0.041874999999999996,
  0.0420625,
  0.04181250000000003],
 [0.05787500000000001,
  0.05312499999999998,
  0.051000000000000045,
  0.04974999999999996,
  0.04818750000000005,
  0.047250000000000014,
  0.04700000000000004,
  0.046812500000000035,
  0.046375000000000055,
  0.04631249999999998,
  0.04600000000000004,
  0.04574999999999996,
  0.04568749999999999,
  0.045812500000000034,
  0.045499999999999985,
  0.044875,
  0.044749999999999956,
  0.044749999999999956,
  0.04456249999999995],
 [0.05206250000000001,
  0.044937499999999964,
  0.041749999999999954,
  0.039562499999999945,
  0.03674999999999995,
  0.03574999999999995,
  0.03443750000000001,
  0.033499999999999974,
  0.032749999999999946,
  0.03237500000000004,
  0.031625000000000014,
  0.03143750000000001,
  0.030562500000000048,
  0.030062499999999992,
  0.02949999999999997,
  0.029187500000000033,
  0.028562500000000046,
  0.028437500000000004,
  0.028562500000000046]]

 all_test_error_perceptron
 all_test_error_perceptron = [[0.15475000000000005,
  0.13975000000000004,
  0.12924999999999998,
  0.123,
  0.11450000000000005,
  0.11175000000000002,
  0.10824999999999996,
  0.10699999999999998,
  0.10575000000000001,
  0.10450000000000004,
  0.10275000000000001,
  0.10299999999999998,
  0.10199999999999998,
  0.10050000000000003,
  0.10150000000000003,
  0.09875,
  0.09724999999999995,
  0.09575,
  0.09575],
 [0.08125000000000004,
  0.07325000000000004,
  0.0695,
  0.06425000000000003,
  0.06399999999999995,
  0.06425000000000003,
  0.06274999999999997,
  0.05974999999999997,
  0.0595,
  0.05900000000000005,
  0.0605,
  0.0605,
  0.05974999999999997,
  0.05900000000000005,
  0.058499999999999996,
  0.058499999999999996,
  0.05725000000000002,
  0.05674999999999997,
  0.05700000000000005],
 [0.07399999999999995,
  0.07099999999999995,
  0.07150000000000001,
  0.06825000000000003,
  0.0635,
  0.061000000000000054,
  0.05974999999999997,
  0.05725000000000002,
  0.05525000000000002,
  0.05500000000000005,
  0.05400000000000005,
  0.05425000000000002,
  0.05225000000000002,
  0.05174999999999996,
  0.05049999999999999,
  0.04949999999999999,
  0.04849999999999999,
  0.04849999999999999,
  0.04749999999999999],
 [0.06674999999999998,
  0.06074999999999997,
  0.058499999999999996,
  0.05049999999999999,
  0.04700000000000004,
  0.04574999999999996,
  0.04500000000000004,
  0.04574999999999996,
  0.04525000000000001,
  0.04425000000000001,
  0.04525000000000001,
  0.04574999999999996,
  0.044499999999999984,
  0.04500000000000004,
  0.04400000000000004,
  0.04349999999999998,
  0.04400000000000004,
  0.04425000000000001,
  0.04400000000000004]]




all_train_error_perceptron
all_train_error_perceptron = [[0.13556250000000003,
  0.11731250000000004,
  0.107375,
  0.09968750000000004,
  0.09256249999999999,
  0.08781249999999996,
  0.08256249999999998,
  0.079125,
  0.07525000000000004,
  0.07262500000000005,
  0.07074999999999998,
  0.06718749999999996,
  0.06425000000000003,
  0.062000000000000055,
  0.06006250000000002,
  0.05774999999999997,
  0.055749999999999966,
  0.05293749999999997,
  0.050124999999999975],
 [0.07493749999999999,
  0.06406250000000002,
  0.058687500000000004,
  0.054187500000000055,
  0.049687499999999996,
  0.04631249999999998,
  0.043875,
  0.04162500000000002,
  0.039562499999999945,
  0.03737500000000005,
  0.035499999999999976,
  0.034499999999999975,
  0.03287499999999999,
  0.03193749999999995,
  0.031124999999999958,
  0.02937500000000004,
  0.027437500000000004,
  0.026249999999999996,
  0.025062499999999988],
 [0.06637499999999996,
  0.05993749999999998,
  0.05631249999999999,
  0.05349999999999999,
  0.05018750000000005,
  0.04918750000000005,
  0.04656249999999995,
  0.044749999999999956,
  0.041312499999999974,
  0.03887499999999999,
  0.03687499999999999,
  0.03574999999999995,
  0.03425,
  0.03256250000000005,
  0.031062499999999993,
  0.02981250000000002,
  0.028874999999999984,
  0.02749999999999997,
  0.026937499999999948],
 [0.06181250000000005,
  0.052749999999999964,
  0.046812500000000035,
  0.041749999999999954,
  0.04031249999999997,
  0.037250000000000005,
  0.034937499999999955,
  0.032749999999999946,
  0.031000000000000028,
  0.029187500000000033,
  0.02849999999999997,
  0.027124999999999955,
  0.026375000000000037,
  0.025124999999999953,
  0.02431249999999996,
  0.02387499999999998,
  0.02312499999999995,
  0.022312499999999957,
  0.022375000000000034]]




import matplotlib
import matplotlib.pyplot as plt

for col,i in zip(col_names,[0,1,2,3]):
    sizes = list(range(2000,20001,1000))
    plt.grid()
    plt.xticks(list(range(2000,20001,2000)))
    plt.plot(sizes, all_test_error_perceptron[i], 'o-', color="r", label="Perceptron test error ")
    plt.plot(sizes, all_train_error_perceptron[i], 'o-', linestyle=':',color="r", label="Perceptron train error ")
    plt.plot(sizes, all_test_error_pegasos[i], 'x-', color="b", label="Pegasos test error")
    plt.plot(sizes, all_train_error_pegasos[i], 'x-', color="b", linestyle=':', label="Pegasos train error") #usa linestile
    plt.legend()
    plt.xlim(2000,20000)
    plt.xlabel('Epochs')
    plt.ylabel('Error')
    plt.title('Label ' + col[2:])
    plt.savefig('label' + str(i+1) + '.jpg')
    plt.clf()

from scipy import stats
import numpy as np
x = np.array(list(range(2000,20001,1000)))
y = np.array(all_time_perceptron[0])
slope, intercept, r_value, p_value, std_err = stats.linregress(x,y)
slope
y = np.array(all_time_pegasos[0])
slope, intercept, r_value, p_value, std_err = stats.linregress(x,y)
slope

for col,i in zip(col_names,[0,1,2,3]):
    sizes = list(range(2000,20001,1000))
    plt.grid()
    plt.xticks(list(range(2000,20001,2000)))
    plt.plot(sizes, all_time_pegasos[i], 'o-', color="r", label="Pegasos traning time")
    plt.plot(sizes, all_time_perceptron[i], 'o-', color="b", label="Perceptron traning time")
    plt.legend()
    plt.xlim(2000,20000)
    plt.xlabel('Epochs')
    plt.ylabel('Time s')
    plt.title('Label ' + col[2:])
    plt.savefig('label' + str(i+1) + 'time.jpg')
    plt.clf()
